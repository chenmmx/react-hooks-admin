{"version":3,"sources":["router/routerConfig.ts","router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","router/subRoute.tsx"],"names":["AppLayout","loadable","routeConfig","path","exact","component","id","name","routes","MyRouter","map","route","moment","locale","message","config","duration","maxCount","notification","placement","bottom","App","isLogined","window","localStorage","getItem","zhCN","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","SubRoute","props"],"mappings":"2QAYMA,EAAYC,aAAS,kBAAM,sEAKpBC,EAAkC,CAC7C,CACEC,KAAM,SACNC,OAAO,EACPC,UARUJ,aAAS,kBAAM,8DASzBK,GAAI,GACJC,KAAM,SAER,CACEJ,KAAM,IACNC,OAAO,EACPC,UAAWL,EACXM,GAAI,IACJC,KAAM,SACNC,OAAQ,CACN,CACEL,KAAM,QACNC,OAAO,EACPC,UArBKJ,aAAS,kBAAM,kCAsBpBK,GAAI,EACJC,KAAM,QAER,CACEJ,KAAM,QACNC,OAAO,EACPC,UA3BKJ,aAAS,kBAAM,4EA4BpBK,GAAI,EACJC,KAAM,W,QCxCDE,EAAW,WACtB,OACE,cAAC,IAAD,UACGP,EAAYQ,KAAI,SAACC,GAChB,OAAO,cAAC,IAAD,eAA6BA,GAAdA,EAAML,U,sCCIpCM,IAAOC,OAAO,SAIdC,EAAA,EAAQC,OAAO,CACbC,SAAU,EACVC,SAAU,IAEZC,EAAA,EAAaH,OAAO,CAClBI,UAAW,WACXC,OAAQ,GACRJ,SAAU,IAsBGK,MApBf,WACE,IAAMC,EAAiE,SAA5CC,OAAOC,aAAaC,QAAQ,cAA0B,EAOjF,OAEE,aADA,CACA,KAAgBZ,OAAQa,IAAxB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACCJ,EAAY,KAAO,cAAC,IAAD,CAAUK,KAAM,IAAKvB,OAAO,EAAMwB,GAAI,iBCxBnDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,K,mGCPaa,EAAW,SAAC/B,GACvB,OACE,cAAC,IAAD,CAEER,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,MACbmC,OAAQ,SAACI,GAAD,OACN,cAAChC,EAAMN,UAAP,yBAAiBE,KAAMI,EAAMJ,KAAMD,GAAIK,EAAML,IAAQqC,GAArD,IAA4DnC,OAAQG,EAAMH,QAAU,QAJjFG,EAAML,O","file":"static/js/main.2ca404fc.chunk.js","sourcesContent":["import loadable from '@loadable/component';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface RouteConfigProps {\n  path: string;\n  exact: boolean;\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  id: number;\n  name?: string;\n  routes?: RouteConfigProps[];\n}\n\nconst AppLayout = loadable(() => import('../layout'));\nconst Login = loadable(() => import('../pages/login'));\nconst Home = loadable(() => import('../pages/home'));\nconst Chat = loadable(() => import('../pages/chat'));\n\nexport const routeConfig: RouteConfigProps[] = [\n  {\n    path: '/login',\n    exact: true,\n    component: Login,\n    id: 99,\n    name: 'Login',\n  },\n  {\n    path: '/',\n    exact: false,\n    component: AppLayout,\n    id: 999,\n    name: 'Layout',\n    routes: [\n      {\n        path: '/home',\n        exact: false,\n        component: Home,\n        id: 1,\n        name: 'Home',\n      },\n      {\n        path: '/chat',\n        exact: false,\n        component: Chat,\n        id: 2,\n        name: 'Chat',\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { routeConfig } from './routerConfig';\nimport { SubRoute } from './subRoute';\nexport const MyRouter = () => {\n  return (\n    <Switch>\n      {routeConfig.map((route) => {\n        return <SubRoute key={route.id} {...route} />;\n      })}\n    </Switch>\n  );\n};\n","import React from 'react';\n// import { Provider } from 'react-redux';\nimport zhCN from 'antd/es/locale-provider/zh_CN';\nimport { HashRouter, Redirect } from 'react-router-dom';\nimport { MyRouter } from './router';\nimport { ConfigProvider, message, notification } from 'antd';\n// import { tokenExpressInTime } from '../src/utils/methods';\n// import storeConfig from './store';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\nimport './App.less';\nmoment.locale('zh-cn');\n\n// const store = storeConfig();\n\nmessage.config({\n  duration: 2,\n  maxCount: 2,\n});\nnotification.config({\n  placement: 'topRight',\n  bottom: 50,\n  duration: 2,\n});\nfunction App() {\n  const isLogined: boolean = window.localStorage.getItem('is_login') === 'true' || false;\n  // useEffect(() => {\n  //   if (tokenExpressInTime()) {\n  //     message.error('登陆过期，请重新登陆!');\n  //   }\n  // }, []);\n\n  return (\n    // <Provider store={store}>\n    <ConfigProvider locale={zhCN}>\n      <HashRouter>\n        <MyRouter />\n        {isLogined ? null : <Redirect from={'*'} exact={true} to={'/login'} />}\n      </HashRouter>\n    </ConfigProvider>\n    // </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const SubRoute = (route: any) => {\n  return (\n    <Route\n      key={route.id}\n      path={route.path}\n      exact={route.exact}\n      render={(props) => (\n        <route.component name={route.name} id={route.id} {...props} routes={route.routes || []} />\n      )}\n    />\n  );\n};\n"],"sourceRoot":""}